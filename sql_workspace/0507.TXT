SQL> --사용이 부담스러움, SYS보다는 하위의 관리자인 SYSTEM을 사용하는것이 좋다
SQL> --SYS 계정으로 로그인 한 상태에서 SYSTEM의 계정을 대할당한다.
SQL> ALTER USER SYSTEM
  2  IDENTIFIED BY 1234;
IDENTIFIED BY 1234
              *
ERROR at line 2:
ORA-01031: insufficient privileges 


SQL> ALTER USER SYSTEM
  2  IDENTIFIED BY 1234;
IDENTIFIED BY 1234
              *
ERROR at line 2:
ORA-01031: insufficient privileges 


SQL> --이미 SQLPLUS 에 접속한 상태에서 다른 계정으로 전환할 때
SQL> --SQLPLUS 호출하지말자, 접속을 전화나는 명령어는 CONNECT,CONN
SQL> CONN SYSTEM/1234
Connected.
SQL> SHOW USER;
USER is "SYSTEM"
SQL> -- 현재 시스템에 만들어 놓은 계정들이 기억이 나지 않는다면?
SQL> -- 사전을 찾아보면 쉽게 이를 알아낼 수 있다.
SQL> -- 현재 시스템에 존재하는 모든 유저를 출력한다.
SQL> -- 오라클에서 시스템 정보를 알기 위해서는 사전을 조회한다.
SQL> -- 현재 접속자가 관리자인 경우 사전의 이름은 접두어가 DBA_.,V$로 시작할 확률이 높다
SQL> SELECT USERNAME FROM DBA_USERS
  2  ;

USERNAME                                                                        
------------------------------------------------------------                    
SYS                                                                             
SYSTEM                                                                          
ANONYMOUS                                                                       
JAVA                                                                            
JS                                                                              
APEX_PUBLIC_USER                                                                
FLOWS_FILES                                                                     
APEX_040000                                                                     
OUTLN                                                                           
DIP                                                                             
ORACLE_OCM                                                                      

USERNAME                                                                        
------------------------------------------------------------                    
XS$NULL                                                                         
MDSYS                                                                           
CTXSYS                                                                          
DBSNMP                                                                          
XDB                                                                             
APPQOSSYS                                                                       
HR                                                                              

18 rows selected.

SQL> ALTER USER JS
  2  IDENTIFIED BY 1234
  3  ;

User altered.

SQL> -- 일반 계정인 JS로 로그인하였다.
SQL> ALTER USER SYSTEM IDENTIFIED BY 1234;

User altered.

SQL> CONN JS/1234
Connected.
SQL> SHO USER;
USER is "JS"
SQL> --제약 조건을 추가적으로 학습한다.
SQL> --NOT NULL, DEFAULT, UNIQUE, CHECK
SQL> -- PRIMARY KEY, FOREIGN KEY
SQL> --JS 가 보유한 테이블 목록을 보기 위해서는 어떻게 해야하느냐..!!?!?!?!?
SQL> --사전에 조회를 통하여 찾아볼 수 있다.
SQL> --현재 계정의 경우 일반인 계정이기 때문에, 사전 이름은 보통  USER_로 시작할 확률이 매우 높다.
SQL> SELECT TABLE_NAME FROM USER_;
SELECT TABLE_NAME FROM USER_
                       *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> SELECT TABLE_NAME FORM USER_TABLES;
SELECT TABLE_NAME FORM USER_TABLES
                       *
ERROR at line 1:
ORA-00923: FROM keyword not found where expected 


SQL> SELECT TABLE_NAME FROM USER_TABLES;

TABLE_NAME                                                                      
------------------------------------------------------------                    
MEMBER                                                                          

SQL> SELECT * FROM MEMBER;

no rows selected

SQL> DROP TABLE FROM MEMBER;
DROP TABLE FROM MEMBER
           *
ERROR at line 1:
ORA-00903: invalid table name 


SQL> DROP TABLE FRROM MEMBER;
DROP TABLE FRROM MEMBER
                 *
ERROR at line 1:
ORA-00933: SQL command not properly ended 


SQL> DROP TABLE FROM MEMBER;
DROP TABLE FROM MEMBER
           *
ERROR at line 1:
ORA-00903: invalid table name 


SQL> --제약 조건 중 !! 너무너무 중요하고 필수적인 PRIMARY KEY를 배워볼 예정이다!
SQL> --이 키의 경우 UNIQUE + NOT NULL 조건을 합쳐둔 것을 의미한다.
SQL> --UNIQUE 만으로는 아직 무결성을 보장받지 못하는 경우를 경험해보자!
SQL> CREATE TABLE MEMBER2(
  2  ID VARCHAR2(20)
  3  , EMAIL VARCHAR2(25)
  4  , REFDATE DATE DEFAULT SYSDATE
  5  );

Table created.

SQL> DROP TABLE MEMBBER;
DROP TABLE MEMBBER
           *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> DROP TABLE MEMBER;

Table dropped.

SQL> DROP TABLE MEMBER2;

Table dropped.

SQL> CREATE TABLE MEMBER2(
  2  ID VARCHAR2(20) UNIQUE
  3  , EMIAL VARCHAR2(25)
  4  , REGDATE DATE DEFAULT SYSDATE,
  5  EMAIL NOT NULL);
EMAIL NOT NULL)
*
ERROR at line 5:
ORA-02263: need to specify the datatype for this column 


SQL> ED
Wrote file afiedt.buf

  1  CREATE TABLE MEMBER2(
  2  ID VARCHAR2(20) UNIQUE
  3  , EMIAL VARCHAR2(25) NOT NULL
  4  , REGDATE DATE DEFAULT SYSDATE
  5* )
  6  CREATE TABLE MEMBER2(
  7  ID VARCHAR2(20) UNIQUE
  8  , EMIAL VARCHAR2(25) NOT NULL
  9  , REGDATE DATE DEFAULT SYSDATE
 10  )
 11  /
CREATE TABLE MEMBER2(
*
ERROR at line 6:
ORA-00922: missing or invalid option 


SQL> CREATE TABLE MEMBER2(
  2  ID VARCHAR2(20) UNIQUE
  3  , EMIAL VARCHAR2(25) NOT NULL
  4  , REGDATE DATE DEFAULT SYSDATE
  5  )
  6  /

Table created.

SQL> 
SQL> 
SQL> CREATE TABLE MEMBER2(
  2  ID VARCHAR2(20) UNIQUE
  3  , EMIAL VARCHAR2(25) NOT NULL
  4  , REGDATE DATE DEFAULT SYSDATE
  5  )SD
  6  
SQL> /
)SD
 *
ERROR at line 5:
ORA-00922: missing or invalid option 


SQL> INSERT INTO MEMBER2(ID,EMAIL) VALUES("ADAMS", "QRKDBTLS");
INSERT INTO MEMBER2(ID,EMAIL) VALUES("ADAMS", "QRKDBTLS")
                                              *
ERROR at line 1:
ORA-00984: column not allowed here 


SQL> INSERT INTO MEMBER2(EMAIL) VALUES('AUM');
INSERT INTO MEMBER2(EMAIL) VALUES('AUM')
                    *
ERROR at line 1:
ORA-00904: "EMAIL": invalid identifier 


SQL> INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');
INSERT INTO MEMBER2(EMAIL) VALUES('DAUM')
                    *
ERROR at line 1:
ORA-00904: "EMAIL": invalid identifier 


SQL> INSERT INTO MEMBER2(EMIAL) VALUES('DAUM');

1 row created.

SQL> ALTER TABLE MEMBER2 RENAME COLUMN EMIAL TO EMAIL;

Table altered.

SQL> --PRIMARY KET 는 유일성과 무결성을 유지하게 만들어서 특정 데이터를 관리하기가 쉽다.
SQL> --UNIQUE 는 중복을 허용하지 않는 장치이긴 하지만, NULL을 허용하여 무결성을 침해하기가 쉽다.
SQL> -- 따라서 테이블에 입력된 데이터들 간 구분을 위한 숫자형 컬럼을 추가할 때에는
SQL> --UNIQUE에다가 NOT NULL을 합친 제약조건을 부여해야 안전하다.
SQL> --하지만 UNIQUE + NOT NULL을 둘 다 명시할 필요는 없다.
SQL> --PRIMARY KEY 는 이를 만족하고 있기 때문에 이것을 사용하면 UNIQUE + NOT NULL을 만족하는 제약조건을 설정할 수 있다.
SQL> CREATE TABLE MEMBER3(
  2  ID NUMBER PRIMARY KEY
  3  , EMAIL VARCHAR2(25)
  4  , REGDATE DATE DEFAULT SYSDATE);

Table created.

SQL> DROP TABLE MEMBER3;

Table dropped.

SQL> CREATE TABLE MEMBER3(
  2  ID NUMBER PRIMARY KEY
  3  ,EMAIL VARCHAR2(25)
  4  ,REGDATE DATE DEFAULT SYSDATE
  5  ,USERID VARCHAR2(20)
  6  );

Table created.

SQL> DIR TABLE MEMEBER3;
SP2-0734: unknown command beginning "DIR TABLE ..." - rest of line ignored.
SQL> --PRIMARY KEY 값은 유일해야 하므로, 시스템이 알아서 증가 시킬 수 있도록 스스로 넣도록 맡겨야한다.
SQL> --따라서 오직 숫자값만을 전용으로 증가시켜주는 객체인 SEQUENCE를 이용해야한다.
SQL> CREATE SQUENCE SEQ_MEMBER3
  2  INCREMENT BY 1
  3  START WITH 1;
CREATE SQUENCE SEQ_MEMBER3
       *
ERROR at line 1:
ORA-00901: invalid CREATE command 


SQL> --권한을 부여받지 못하면 SEQUENCE명령어를 사용할 수 없다.
SQL> --따라서 다시 SYS로 돌아가자!
SQL> CONN SYS/1234
ERROR:
ORA-28009: connection as SYS should be as SYSDBA or SYSOPER 


Warning: You are no longer connected to ORACLE.
SQL> CONN SYSTEM/1234
Connected.
SQL> GRANT CREATE SEQENCE TO JS;
GRANT CREATE SEQENCE TO JS
      *
ERROR at line 1:
ORA-00990: missing or invalid privilege 


SQL> GRANT CREATE SEQUENCE TO JS;

Grant succeeded.

SQL> CONN JS/1234
Connected.
SQL> CREATE SEQUENCE SEQ_MEMBER3
  2  INCREMENT BY 1
  3  START WITH 1;

Sequence created.

SQL> INSERT INTO MEMBER3(ID,USERID,EMAIL)
  2  VALUES (SEQ_MEMBER3.NEXTVAL,'KING', 'DAUM');

1 row created.

SQL> SELECT * FROM MEMBER3;

        ID EMAIL                                              REGDATE           
---------- -------------------------------------------------- --------          
USERID                                                                          
----------------------------------------                                        
         1 DAUM                                               25/05/07          
KING                                                                            
                                                                                

SQL> INSERT INTO MEMBER3(ID,USERID,EMAIL)
  2  VALUES (SEQ_MEMBER3.NEXTVAL,'ADAMS'.'NAVER');
VALUES (SEQ_MEMBER3.NEXTVAL,'ADAMS'.'NAVER')
                                   *
ERROR at line 2:
ORA-00917: missing comma 


SQL> INSERT INTO MEMBER3(ID,USERID,EMAIL)
  2  VALUES (SEQ_MEMBER3.NEXTVAL,'KING', 'DAUM');

1 row created.

SQL> SELECT * FROM MEMBER3;

        ID EMAIL                                              REGDATE           
---------- -------------------------------------------------- --------          
USERID                                                                          
----------------------------------------                                        
         1 DAUM                                               25/05/07          
KING                                                                            
                                                                                
         2 DAUM                                               25/05/07          
KING                                                                            
                                                                                

SQL> SPOOL OFF
